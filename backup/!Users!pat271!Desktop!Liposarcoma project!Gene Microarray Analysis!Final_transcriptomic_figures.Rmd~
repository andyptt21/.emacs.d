---
title: "Liposarcoma Transcriptomics Analysis"
author: "Andrew Patt"
date: "December 3rd, 2018"
output: pdf_document
---


```{r,echo=FALSE}
knitr::opts_chunk$set(echo=FALSE, message=FALSE,warning=FALSE, fig.height=4)

library(grid)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  plots <- c(list(...), plotlist)
  numPlots = length(plots)
  if (is.null(layout)) {
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }
 if (numPlots==1) {
    print(plots[[1]])
  } else {
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    for (i in 1:numPlots) {
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

```

```{r, filterAndPlotData}
library(dplyr)
library(tidyr)
library(ggplot2)

filterAndPlot<-function(data,med_cutoff=.25,SD_cutoff=.25,gn.=gn){
    plot.df<-as.data.frame(as.vector(data))
    colnames(plot.df)<-"data"
    median <- apply(data, 1, median)
    cutoff<-sort(median)[ceiling(length(median)*med_cutoff)]
    high_med <- median > cutoff

    p1<-ggplot(plot.df,aes(x=data)) +
        geom_density(fill="red",alpha=0.5,adjust = 1/2) +
        theme_classic() +
        ggtitle("Global transcript abundance density, pre abundance filtration") +
        geom_vline(xintercept=cutoff)

    sd<-apply(data,1,sd)
    #mean<-apply(data,1,mean)
    #CV<-sd/mean
    plot.df<-as.data.frame(sd)
    colnames(plot.df)<-"sd"
    cutoff<-sort(sd)[ceiling(length(sd)*SD_cutoff)]
    high_sd <- sd > cutoff

    p3<-ggplot(plot.df,aes(x=sd)) +
        geom_density(fill="purple",alpha=0.5,adjust = 1/2) +
        theme_classic() +
        ggtitle("Transcript sd, pre sd filtration") +
        geom_vline(xintercept=cutoff)

    data <- data[high_med & high_sd,]
    gn <- gn[high_med & high_sd]
    
    plot.df<-as.data.frame(as.vector(data))
    colnames(plot.df)<-"data"
    p2<-ggplot(plot.df,aes(x=data)) +
        geom_density(fill="red",alpha=0.5,adjust = 1/2) +
        theme_classic() +
        ggtitle("Global transcript abundance density, post abundance filtration")    
    
    sd<-as.data.frame(apply(data,1,sd))
    #mean<-as.data.frame(apply(data,1,mean))
    #CV<-sd/mean
    colnames(sd)<-"sd"
    p4<-ggplot(sd,aes(x=sd)) +
        geom_density(fill="purple",alpha=0.5,adjust = 1/2) +
        theme_classic() +
        ggtitle("Transcript sd, post sd filtration")

    plotlist<-list(p1,p2,p3,p4)
return(list(data,gn,plotlist))
}

pcaPlot<-function(data){
    mypca=prcomp(t(data),center=T,scale=T)
    percvar=round((mypca$sdev)^2 / sum(mypca$sdev^2)*100,2)
    mydf=data.frame(PC1=mypca$x[,"PC1"],PC2=mypca$x[,"PC2"])
    p <- ggplot(mydf,aes(PC1,PC2)) +
        geom_point(aes(PC1,PC2),size=4) +
        xlab(paste0("PC1: ",percvar[1],"% variance")) +
        ylab(paste0("PC2: ",percvar[2],"% variance")) +
        theme_bw() +
        theme(axis.line = element_line(colour = "black"),
              axis.title=element_text(size=12,face="bold"),
              plot.title=element_text(size=14,face="bold"),
              panel.grid.major = element_blank(),
              panel.grid.minor = element_blank(),
              panel.background = element_blank(),
              legend.key=element_blank())
    return(p)
}

```

Noting here that we are removing Denton from subsequent analyses;
Denton samples are post-treatment, and there is very little variance
in MDM2 expression between samples unfortunately.

Examining transcriptomic differences between MDM2 High and Low samples of the DDLPS
subset in the SARC TCGA cohort. TCGA data are RSEM normalized.
Boxplot of transcript abundance by sample post-processing.

```{r}

library(RaMP)
library(knitr)
setwd("~/Desktop/Liposarcoma project/Gene Microarray Analysis/TCGA_Sarcoma_RNAseq/")
#if (!require("TCGAbiolinks")) {
#  source("https://bioconductor.org/biocLite.R")
#  biocLite("TCGAbiolinks")
#  library(TCGAbiolinks)
#}
#library(dplyr)
#library(DT)

if (!require("RJSONIO")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("RJSONIO")
  library(RJSONIO)
}
fb <- function(COHORT) {
  paste("http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/",
        COHORT,
        "/20160128/gdac.broadinstitute.org_",
        COHORT,
        ".Merge_rnaseqv2__illuminahiseq_rnaseqv2__unc_edu__Level_3__",
        "RSEM_genes_normalized__data.Level_3.2016012800.0.0.tar.gz",
        sep="")
}

fetch <- function(COHORT) {
  dataurl <- fb(COHORT)
  fname <- basename(dataurl)
  download.file(dataurl, fname)
  cat("uncompressing\n", file=stderr())
  untar(fname, compressed="gzip") # gunzip and untar
  unlink(fname) # remove the tar.gz version
  localdir <- sub(".tar.gz", "", fname)
  cat("Creating a binary R object\n", file=stderr())
  datasrc <- file.path(localdir, dir(localdir, pattern="RSEM"))
  dumbheads <- read.table(datasrc, sep="\t", header=TRUE, nrows=1, row.names=1)
  ncounts <- read.table(datasrc, sep="\t", header=FALSE, skip=2, row.names=1)
  colnames(ncounts) <- colnames(dumbheads)
  ncounts <- as.matrix(ncounts)
  rm(localdir, datasrc, dumbheads)
  ncounts
}

f <- "sarcoma.Rda"
if (file.exists(f)) {
  load(f)
} else {
  sarc <- fetch("SARC")
  save(sarc, file=f)
}
rm(f)

clinical_data<-read.table(file="~/Desktop/Liposarcoma project/Gene Microarray Analysis/TCGA_Sarcoma_RNAseq/clinical.tsv",
sep = '\t', header = TRUE)

sarcSampleType <- substring(colnames(sarc), 14, 15)
#table(sarcSampleType)

sarcSampleID <- substring(colnames(sarc), 1, 12)
DDLPS_ids<-as.vector(clinical_data$submitter_id)
DDLPS_ids<-gsub("-","\\.",DDLPS_ids)

DDLPS<-sarc[,match(DDLPS_ids,sarcSampleID)]
DDLPS_SampleType<-sarcSampleType[match(DDLPS_ids,sarcSampleID)]
# Want to look at primary solid tumor only
sarc_01<-DDLPS[,DDLPS_SampleType == "01"]

## Log transform
NS <- log2(1 + sarc_01)
NS<-NS[,which(!is.na(colnames(NS)))]
# Get gene names and remove duplicates
gn <- unlist(lapply(strsplit(rownames(NS), "\\|"), function(x) x[1]))
dup <- sapply(gn, function(x) return(duplicated(x) || x == '\\?'))
#dup <- duplicated(gn)
NS <- NS[!dup,]
gn <- gn[!dup]

```


Need to cut off lowly expressed genes.


```{r}

filtered_data<-filterAndPlot(NS,med_cutoff=0.4,SD_cutoff=0.25)
NS<-filtered_data[[1]]
gn<-filtered_data[[2]]
plotlist<-filtered_data[[3]]
multiplot(plotlist=plotlist,cols=2)

pcaPlot(NS)+ggtitle("TCGA PCA")

MDM2_ind<-which(gn=="MDM2")
UGCG_ind<-which(gn=="UGCG")
UGCG_TCGA<-data.frame(MDM2=NS[MDM2_ind,],UGCG=NS[UGCG_ind,])

```

```{r}

TCGA_Z_Scores<-scale(NS)
TCGA_Z_Score_MDM2<-TCGA_Z_Scores[MDM2_ind,]

MDM2correlations<-apply(NS[-MDM2_ind,],1,cor,y=NS[MDM2_ind,],method="spearman")
MDM2CorrSig<-apply(NS[-MDM2_ind,],1,function(x) return(cor.test(x,y=NS[MDM2_ind,],method="spearman")$p.value))
qplot(MDM2CorrSig,bins=500)+theme_classic()+xlab("Unadjusted Spearman P value")
MDM2CorrSig<-p.adjust(MDM2CorrSig, method = "fdr")

id <- unlist(lapply(strsplit(names(MDM2CorrSig), "\\|"), function(x) x[2]))
significantly_correlated_genes<-data.frame(id=id[which(MDM2CorrSig < 0.05)], 
                                           name=gn[which(MDM2CorrSig < 0.05)],rho=MDM2correlations[which(MDM2CorrSig < 0.05)],
                                          p.value=MDM2CorrSig[which(MDM2CorrSig < 0.05)])

kable(significantly_correlated_genes)

gene_correlations<-data.frame(name=gn[-MDM2_ind],rho=MDM2correlations,p.value=MDM2CorrSig)

```

```{r,eval=FALSE}

library(RaMP)

## Oddly, common names badly beats entrez ID by a score of 9 to 4...

##combined_pathways<-getPathwayFromAnalyte(analytes=paste0("entrez:",as.vector(significantly_correlated_genes$id)),conpass = "",NameOrIds = "ids")
combined_pathways<-getPathwayFromAnalyte(analytes=as.vector(significantly_correlated_genes$name),conpass = "",NameOrIds = "names")
combined_fishers<-runCombinedFisherTest(pathwaydf = combined_pathways,conpass = "")
save(combined_fishers,file="TCGA_RaMP_analysis.Rda")

```

```{r,fig.height=4.3,eval=FALSE}

load("TCGA_RaMP_analysis.Rda")
combined_fishers_sig<-FilterFishersResults(combined_fishers,p_holmadj_cutoff = 0.05)
combined_fishers_sig$analyte_type<-"both"
fishClusteringCom<-findCluster(combined_fishers_sig,perc_analyte_overlap=0.2,perc_pathway_overlap=0.2)

library(dplyr)
library(tidyr)

## Combined plot
fishresultCom <- fishClusteringCom$fishresults
bubbleDF <- data.frame(x=-log10(fishresultCom$Pval_combined_Holm),y=fishresultCom$pathwayName, inPath <- fishresultCom$Num_In_Path.Gene, 
                       totPath <- fishresultCom$Total_In_Path.Gene,cluster=fishresultCom$cluster_assignment)

bubbleDF <- bubbleDF[order(bubbleDF$x, decreasing = TRUE),]
bubbleDF <- bubbleDF %>% separate_rows(cluster,sep=", ")
bubbleDF$cluster <- sapply(bubbleDF$cluster, function(x) ifelse(x=="Did not cluster", return(x), return(paste0("Cluster ",x))))
p2 <- ggplot(bubbleDF,aes(y=x,x=reorder(y,x), fill = cluster)) +
    geom_bar(stat = "identity", colour = "black",position = "dodge", width = 0.75) +
    geom_hline(yintercept=-log10(0.05),linetype = "dotted") +
    theme_bw() +
    coord_flip() +
    labs(x = "", y = "-log10(pval)") +
    theme(axis.line = element_line(colour = "black"),
        axis.title=element_text(size=12,face="bold"),
        plot.title=element_text(size=14,face="bold"),
        panel.grid.minor = element_blank(),
        legend.position = "none",
        panel.background = element_blank()) +
        scale_fill_brewer(palette="Set1") +
    facet_grid(cluster~.,space="free",scales="free") +
  ggtitle("TCGA pathway analysis")
p2

```
RaMP pathway analysis results


ToppGene results:

+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Category |ID        |Name                           |Source       |p-value |q-value   |Hit  |Hit                |Hit             |
|         |          |                               |             |        |Bonferroni|Count|Count              |in              |
|         |          |                               |             |        |          |in   |in                 |Query           |
|         |          |                               |             |        |          |Query|Genome             |List            |
|         |          |                               |             |        |          |List |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |M3686     |Expression of cyclins regulates|MSigDB       |3.609E-5|8.155E-3  |2    |13                 |CDKN2A,CDK4     |
|         |          |progression through the cell   |C2           |        |          |     |                   |                |
|         |          |cycle by activating            |BIOCARTA     |        |          |     |                   |                |
|         |          |cyclin-dependent kinases.      |(v6.0)       |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |M1529     |Cdk2, 4, and 6 bind cyclin D in|MSigDB       |4.854E-5|1.097E-2  |2    |15                 |CDKN2A,CDK4     |
|         |          |G1, while cdk2/cyclin E        |C2           |        |          |     |                   |                |
|         |          |promotes the G1/S transition.  |BIOCARTA     |        |          |     |                   |                |
|         |          |                               |(v6.0)       |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |M17770    |Cyclins and Cell Cycle         |MSigDB       |1.166E-4|2.635E-2  |2    |23                 |CDKN2A,CDK4     |
|         |          |Regulation                     |C2           |        |          |     |                   |                |
|         |          |                               |BIOCARTA     |        |          |     |                   |                |
|         |          |                               |(v6.0)       |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |M648      |Cell Cycle: G1/S Check Point   |MSigDB       |1.739E-4|3.930E-2  |2    |28                 |CDKN2A,CDK4     |
|         |          |                               |C2           |        |          |     |                   |                |
|         |          |                               |BIOCARTA     |        |          |     |                   |                |
|         |          |                               |(v6.0)       |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1270427   |Oncogene Induced Senescence    |BioSystems:  |2.278E-4|5.149E-2  |2    |32                 |CDKN2A,CDK4     |
|         |          |                               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1269766   |G1 Phase                       |BioSystems:  |3.395E-4|7.672E-2  |2    |39                 |CDKN2A,CDK4     |
|         |          |                               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1269767   |Cyclin D associated events in  |BioSystems:  |3.395E-4|7.672E-2  |2    |39                 |CDKN2A,CDK4     |
|         |          |G1                             |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83115     |Bladder cancer                 |BioSystems:  |3.754E-4|8.484E-2  |2    |41                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83119     |Non-small cell lung cancer     |BioSystems:  |7.519E-4|1.699E-1  |2    |58                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83108     |Pancreatic cancer              |BioSystems:  |9.150E-4|2.068E-1  |2    |64                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83110     |Glioma                         |BioSystems:  |9.150E-4|2.068E-1  |2    |64                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83114     |Melanoma                       |BioSystems:  |1.063E-3|2.402E-1  |2    |69                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83055     |p53 signaling pathway          |BioSystems:  |1.063E-3|2.402E-1  |2    |69                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83116     |Chronic myeloid leukemia       |BioSystems:  |1.125E-3|2.542E-1  |2    |71                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |413391    |Cholecalciferol biosynthesis   |BioSystems:  |1.445E-3|3.266E-1  |1    |2                  |CYP27B1         |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |PW:0000089|S phase                        |Pathway      |1.445E-3|3.266E-1  |1    |2                  |CDK4            |
|         |          |                               |Ontology     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |545291    |vitamin D3 biosynthesis        |BioSystems:  |1.445E-3|3.266E-1  |1    |2                  |CYP27B1         |
|         |          |                               |BIOCYC       |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1404799   |Endocrine resistance           |BioSystems:  |2.045E-3|4.622E-1  |2    |96                 |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |PW:0000087|G1 phase                       |Pathway      |2.167E-3|4.898E-1  |1    |3                  |CDK4            |
|         |          |                               |Ontology     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1270431   |Senescence-Associated Secretory|BioSystems:  |2.722E-3|6.153E-1  |2    |111                |CDKN2A,CDK4     |
|         |          |Phenotype (SASP)               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |83054     |Cell cycle                     |BioSystems:  |3.384E-3|7.648E-1  |2    |124                |CDKN2A,CDK4     |
|         |          |                               |KEGG         |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1270428   |Oxidative Stress Induced       |BioSystems:  |3.547E-3|8.015E-1  |2    |127                |CDKN2A,CDK4     |
|         |          |Senescence                     |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1383028   |PTK6 Regulates Cell Cycle      |BioSystems:  |4.330E-3|9.787E-1  |1    |6                  |CDK4            |
|         |          |                               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1270199   |Vitamins                       |BioSystems:  |4.330E-3|9.787E-1  |1    |6                  |CYP27B1         |
|         |          |                               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1269764   |Mitotic G1-G1/S phases         |BioSystems:  |4.596E-3|1.000E0   |2    |145                |CDKN2A,CDK4     |
|         |          |                               |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+
|Pathway  |1270052   |Vitamin D (calciferol)         |BioSystems:  |5.050E-3|1.000E0   |1    |7                  |CYP27B1         |
|         |          |metabolism                     |REACTOME     |        |          |     |                   |                |
+---------+----------+-------------------------------+-------------+--------+----------+-----+-------------------+----------------+

Survival analysis

```{r}
library(survival)
# Get the order the same so we can incorporate MDM2 status
substrLeft <- function(x, n){
  substr(x, 1, n)
}

sample_order_NS<-sapply(colnames(NS), substrLeft, n=12)

reorder_cd <- match(DDLPS_ids,as.vector(sample_order_NS))
reorder_cd <- reorder_cd[!is.na(reorder_cd)]
clinical_data <- clinical_data[as.numeric(reorder_cd),]
clinical_data$MDM2_expression <- NS[MDM2_ind,]

days_to_death_numeric<-apply(clinical_data,1, function(x){ifelse(x[16]=="--",return(as.numeric(x[25])),return(as.numeric(x[16])))})
status<-sapply(as.vector(clinical_data$days_to_death),function(x) ifelse(x=="--",return(0),return(1)))
clinical_data$days_to_death<-days_to_death_numeric
clinical_data$survival_status<-status

library(survminer)
sf <- survfit( Surv(days_to_death,status) ~ 1, data = clinical_data)
ggsurvplot(sf,ggtheme = theme_minimal())

fitcox <- coxph(Surv(days_to_death, status) ~ MDM2_expression, data = clinical_data)
summary(fitcox)

```

# Jim's cell line data

```{r,eval=FALSE}

library(openxlsx)

cell_line_data<-read.xlsx("~/Desktop/Liposarcoma project/Chen_cuffnorm_transcriptExpr LPS cell lines (1).xlsx")

cell_line_data[1,6:15]<-colnames(cell_line_data)[6:15]
colnames(cell_line_data)<-cell_line_data[1,]
cell_line_data<-cell_line_data[-1,]

cell_line_data_num<-cell_line_data[,6:15]
cell_line_data_num<-t(apply(cell_line_data_num, 1, as.numeric))

NS <- log2(1 + cell_line_data_num)
NS<-NS[,-c(1,8:10)]


## Get gene names 
gn <- cell_line_data$gene_short_name

############################################################################
## Looking at ceramide glycosylation probes                               ##
############################################################################
library(cowplot)
MDR1_probes <- which(gn=="ABCB1")
FAPP2_probes <- which(gn=="PLEKHA8")

probe_corr_plotter<-function(gene){
  indices<-which(gn==gene)
  out<-lapply(indices, function(x){
    probe = NS[x,]
    plot_df <- data.frame(MDM2=NS[1,], probe, status=c(rep("MDM2 High",4),rep("MDM2 Low",2)))
    p<-ggplot(plot_df, aes(x=MDM2,y=probe,color=status)) +
      geom_point() +
      theme_classic() +
      ylab(gene) +
      scale_color_manual(values=c("red", "blue")) +
      guides(color = FALSE)
    return(p)
  })
  return(out)
}

pdf("~/Desktop/Ceramide_glycosylation_probes.pdf")
plot_grid(plotlist=probe_corr_plotter("ABCB1"),ncol = 2)
plot_grid(plotlist=probe_corr_plotter("PLEKHA8"),ncol = 2)
plot_grid(plotlist=probe_corr_plotter("UGCG"),ncol = 2)
plot_grid(plotlist=probe_corr_plotter("GBA")[1:8],ncol = 2)
plot_grid(plotlist=probe_corr_plotter("GBA")[9:14],ncol = 2)
dev.off()

## Merge duplicate probes
indices <- c()
for(x in unique(gn)){
    probes<-which(gn==x)
    if(length(probes)==1){
        indices <- c(indices,probes)
    }else{
        probe_medians<-apply(NS[probes,],1,median)
        output<-probes[which.max(probe_medians)]
        indices <- c(indices,output)
    }
}

NS<-NS[indices,]
gn<-gn[indices]


## Filter data
filtered_data<-filterAndPlot(NS,med_cutoff=0.7,SD_cutoff=0.01)
NS_filtered<-filtered_data[[1]]
gn_filtered<-filtered_data[[2]]
colnames(NS_filtered)<-colnames(cell_line_data)[7:12]
plotlist<-filtered_data[[3]]

save(NS_filtered, gn_filtered, plotlist, file="/Users/pat271/Desktop/Liposarcoma project/Gene Microarray Analysis/cell_line_data.Rda")

```

Distributions for Jim's cell line data post-processing

```{r}

load("/Users/pat271/Desktop/Liposarcoma project/Gene Microarray Analysis/cell_line_data.Rda")

multiplot(plotlist=plotlist,cols=2)

MDM2_ind<-which(gn_filtered=="MDM2")
UGCG_ind<-which(gn_filtered=="UGCG")
UGCG_cells<-data.frame(MDM2=NS_filtered[MDM2_ind,],UGCG=NS_filtered[UGCG_ind,])

cell_lines_Z_scores<-scale(NS_filtered)
cell_lines_Z_score_MDM2<-cell_lines_Z_scores[MDM2_ind,]

MDM2_cell_frame<-data.frame(group=colnames(NS_filtered),value=NS_filtered[MDM2_ind,],
                            status=c(rep("MDM2 High",4),rep("MDM2 Low",2)))
ggplot(MDM2_cell_frame, aes(x=group,y=value,color=status)) +
    geom_point(size=15) +
    theme_classic() +
    ggtitle("MDM2 expression by cell line") +
    scale_color_manual(values=c("red", "blue"))

library(ClassComparison)
cellsrc <- factor(c(rep("MDM2hi",times=4),rep("MDM2lo",times=2)))
names(cellsrc) <- colnames(NS_filtered) <- paste(cellsrc, colnames(NS_filtered), sep='.')


mtt_cell <- MultiTtest(NS_filtered, cellsrc)
bum_cell <- Bum(mtt_cell@p.values)
hist(bum_cell,main="BUM results")

pvals<-bum_cell@pvals
order=order(pvals, decreasing=FALSE)
#significant_NS<-NS_filtered[ss,]

gn_ordered_list<-gn_filtered[order]
gn_ordered_list<-gn_ordered_list[1:30]

```

The overlapping genes in cell line genes and chibon genes played roles
in RNA synthesis and apoptosis regulation.

```{r,eval=F}

cell_line_pathways<-getPathwayFromAnalyte(analytes=as.vector(unique(MDM2_correlations_cells_sig$gn)),conpass = "",NameOrIds = "names")
cell_line_fishers<-runCombinedFisherTest(pathwaydf = cell_line_pathways,conpass = "")
save(cell_line_fishers,file="cell_line_RaMP_analysis.Rda")

```

```{r,eval=F}

load("cell_line_RaMP_analysis.Rda")
cell_line_fishers_sig<-FilterFishersResults(cell_line_fishers,p_holmadj_cutoff = 0.1)
cell_line_fishers_sig$analyte_type<-"both"
fishClusteringCell_line<-findCluster(cell_line_fishers_sig,perc_analyte_overlap=0.2,perc_pathway_overlap=0.2)

fishresultCell_line <- fishClusteringCell_line$fishresults
bubbleDF <- data.frame(x=-log10(fishresultCell_line$Pval_Holm),y=fishresultCell_line$pathwayName, inPath <- fishresultCell_line$Num_In_Path, 
                       totPath <- fishresultCell_line$Total_In_Path,cluster=fishresultCell_line$cluster_assignment)

bubbleDF <- bubbleDF[order(bubbleDF$x, decreasing = TRUE),]
bubbleDF <- bubbleDF %>% separate_rows(cluster,sep=", ")
bubbleDF$cluster <- sapply(bubbleDF$cluster, function(x) ifelse(x=="Did not cluster", return(x), return(paste0("Cluster ",x))))
p2 <- ggplot(bubbleDF,aes(y=x,x=reorder(y,x), fill = cluster)) +
    geom_bar(stat = "identity", colour = "black",position = "dodge", width = 0.75) +
    geom_hline(yintercept=-log10(0.1),linetype = "dotted") +
    theme_bw() +
    coord_flip() +
    labs(x = "", y = "-log10(pval)") +
    theme(axis.line = element_line(colour = "black"),
        axis.title=element_text(size=12,face="bold"),
        plot.title=element_text(size=14,face="bold"),
        panel.grid.minor = element_blank(),
        legend.position = "none",
        panel.background = element_blank()) +
        scale_fill_brewer(palette="Set1") +
    facet_grid(cluster~.,space="free",scales="free") +
    ggtitle("Cell lines")

#pdf("~/Desktop/cell_line_pathways.pdf",width=8,height=10)
p2
#dev.off()

```

# Chibon

Data were normalized with the GCRMA (GC-RObust Multi-Array Analysis)
algorithm. No mention of log transformation.

```{r,eval=FALSE}

setwd("~/Desktop/Liposarcoma project/Gene Microarray Analysis/")
if (!require("GEOquery")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("GEOquery")
  library(GEOquery)
}
if (!require("affy")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("affy")
  library(affy)
}
 if (!require("oligo")) {
   source("https://bioconductor.org/biocLite.R")
   biocLite("oligo")
   library(oligo)
 }
if (!require("limma")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("limma")
  library(limma)
}
if (!require("lumi")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("lumi")
library(lumi)
}
if (!require("vsn")) {
  source("https://bioconductor.org/biocLite.R")
  biocLite("vsn")
  library(vsn)
}


f <- "GSE71118.Rda"
if (file.exists(f)) {
  load(f)
} else {
    gset <- getGEO("GSE21050", GSEMatrix =TRUE, getGPL=FALSE)
    if (length(gset) > 1) idx <- grep("GPL570", attr(gset, "names")) else idx <- 1
    gset <- gset[[idx]]


    gsms <- paste0("0XXXX00X0XXX0XXXX0XX0XXXXXXXX0XX0X0XXXXXXXXXXXXXX0",
                   "X0XXXX0XXXXXXXXXXXXXX00X0000XXXXXX0XX0X0XX0XXXXXXX",
                   "XXXXXX00X0XX0XXXX0XXX0XXXXXXX00XXXXXXXX0XX0XXX000X",
                   "XXXX0XX0XXXX0X0XXX00XXXXX00XXXXXX0XXXXXXXXXXXXXXXX",
                   "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX0X0XX0XXXXXXXX0XX0X",
                   "XXXXXXXXXXXX0X0XXXXXXXXXXXXXXXXXXXXXXXXXX0XX000000",
                   "0X0XXXXXX0")
    sml <- c()
    for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
    sml <- paste("G", sml, sep="")
    sel <- which(sml != "GX")
    sml <- sml[sel]
    gset <- gset[ ,sel]
    save(gset,file=f)
}
rm(f)
if (file.exists("locns_GSE71118.Rda")) {
    load("locns_GSE71118.Rda")
} else {
    locns_GSE71118 <- getGEOSuppFiles("GSE71118")
    save(locns_GSE71118, file="locns_GSE71118.Rda")
}

setwd("GSE71118/")

celFiles<- unlist(list.files(pattern=".CEL.gz",full.names=TRUE))
gsms <- paste0("00XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00",
        "XXX0XXXX0X0X0X0X0XXXXXXXXXXX0XXXXXX0XXX00X0XXX00XX",
        "XXXXXX0X0XXXXXX0XXX0XXXXXXXXXXXXXXXXX0XXXX00XXXXX0",
        "XX0XXXXXX0XXXXXX0XXXXXXXXXXXXXXXX00X0XXXXXXXX0XXXX",
        "XXXXXXX0XX0XXXXXXXXXXXXXXXXXXX0XXXXXXX0X0XXXXXXXXX",
        "XXXXXXXXXXXXXXXXXX0XXXXXXXXXXXXXXXXX0XX0XXX0X0XXXX",
        "XXXXXX0XX0XX")
DD_indices <- gregexpr('0', gsms)[[1]]
DDcelFiles<-celFiles[DD_indices]
chibon_data<-ReadAffy(filenames = DDcelFiles)

library("annotate")
library("hgu133a.db")

chibon_eset<-gset
chibon_data_exprs<-exprs(chibon_eset)
probes<-affy::geneNames(chibon_data)
## Create a table that translates affyProbes to gene symbols
OUT <- select(hgu133a.db, probes, c("SYMBOL", "ENTREZID", "GENENAME", "ENSEMBL"))

###########################
# Deduplicate
###########################
chibon_data_exprs <- log2(1 + chibon_data_exprs)
gn<-OUT$SYMBOL[match(rownames(chibon_data_exprs),OUT$PROBEID)]
ensembl<-OUT$ENSEMBL[match(rownames(chibon_data_exprs),OUT$PROBEID)]

chibon_data_exprs <- chibon_data_exprs[-is.na(ensembl),]
gn <- gn[-is.na(ensembl)]
ensembl <- ensembl[-is.na(ensembl)]

indices <- c()
for(x in unique(ensembl)){
    probes<-which(ensembl==x)
    if(length(probes)==1){
        indices <- c(indices,probes)
    }else{
        probe_medians<-apply(chibon_data_exprs[probes,],1,median)
        output<-probes[which.max(probe_medians)]
        indices <- c(indices,output)
    }
}
###########################

UGCG_probe_2<-chibon_data_exprs[31045,]
MDR1_exprs<-chibon_data_exprs[which(gn=="ABCB1"),]
FAPP2_exprs<-chibon_data_exprs[which(gn=="PLEKHA8"),]

############################################################################
## Filter                                                                 ##
############################################################################

chibon_data_exprs<-chibon_data_exprs[indices,]
gn<-gn[indices]

filtered_data<-filterAndPlot(chibon_data_exprs,med_cutoff=0.4,SD_cutoff=0.25)
############################

chibon_data_exprs<-filtered_data[[1]]
gn<-filtered_data[[2]]
plotlist<-filtered_data[[3]]

pcaPlot(chibon_data_exprs)+ggtitle("Chibon PCA")

MDM2_Probe<-which(gn=="MDM2")
UGCG_ind<-which(gn=="UGCG")
UGCG_chibon<-data.frame(MDM2=chibon_data_exprs[MDM2_Probe,],UGCG=chibon_data_exprs[UGCG_ind,])

MDM2_correlations_chibon<-apply(chibon_data_exprs[-MDM2_Probe,],1,function(x) return(cor(x,chibon_data_exprs[MDM2_Probe,],method="spearman")))
MDM2_corr_test_chibon<-apply(chibon_data_exprs[-MDM2_Probe,],1,function(x) return(cor.test(x,chibon_data_exprs[MDM2_Probe,],method="spearman")$p.value))
pval_plot_chibon<-qplot(MDM2_corr_test_chibon,bins=500)+theme_classic()+xlab("Unadjusted Spearman P value")
MDM2_corr_test_chibon_adj<-p.adjust(MDM2_corr_test_chibon,method="fdr")

MDM2_correlations_chibon<-data.frame(MDM2_correlations_chibon,MDM2_corr_test_chibon_adj,gn[-MDM2_Probe])
MDM2_correlations_chibon<-MDM2_correlations_chibon[order(MDM2_correlations_chibon[,2]),]

MDM2_correlations_chibon_sig<-MDM2_correlations_chibon[MDM2_correlations_chibon[,2]<0.05,]

entrez_ids<-OUT$ENTREZID[match(rownames(MDM2_correlations_chibon_sig),OUT$PROBEID)]

chibon_pathways<-getPathwayFromAnalyte(analytes=as.vector(unique(MDM2_correlations_chibon_sig$gn)),conpass = "",NameOrIds = "names")
chibon_fishers<-runCombinedFisherTest(pathwaydf = chibon_pathways,conpass = "")
save(chibon_fishers, MDM2_correlations_chibon, MDM2_correlations_chibon_sig, gn, MDM2_corr_test_chibon, chibon_data_exprs, plotlist, UGCG_chibon, pval_plot_chibon, MDM2_Probe, file="~/Desktop/Liposarcoma project/Gene Microarray Analysis/GSE71118/chibon_RaMP_analysis.Rda")

```

```{r}
load("~/Desktop/Liposarcoma project/Gene Microarray Analysis/GSE71118/chibon_RaMP_analysis.Rda")

pval_plot_chibon

chibon_z_scores<-scale(chibon_data_exprs)
chibon_z_score_MDM2<-chibon_z_scores[MDM2_Probe,]

multiplot(plotlist=plotlist,cols=2)
##kable(MDM2_correlations_chibon_sig)
```

```{r,fig.height=10,fig.width=10}
chibon_fishers_sig<-FilterFishersResults(chibon_fishers,p_holmadj_cutoff = 0.1)
#chibon_fishers_sig$analyte_type<-"both"
fishClusteringchibon<-findCluster(chibon_fishers_sig,perc_analyte_overlap=0.1,perc_pathway_overlap=0.2)

fishresultchibon <- fishClusteringchibon$fishresults
bubbleDF <- data.frame(x=-log10(fishresultchibon$Pval_combined_Holm),y=fishresultchibon$pathwayName, inPath <- fishresultchibon$Num_In_Path.Gene, 
                       totPath <- fishresultchibon$Total_In_Path.Gene,cluster=fishresultchibon$cluster_assignment)

bubbleDF <- bubbleDF[order(bubbleDF$x, decreasing = TRUE),]
bubbleDF <- bubbleDF %>% separate_rows(cluster,sep=", ")
bubbleDF$cluster <- sapply(bubbleDF$cluster, function(x) ifelse(x=="Did not cluster", return(x), return(paste0("Cluster ",x))))
p2 <- ggplot(bubbleDF,aes(y=x,x=reorder(y,x), fill = cluster)) +
    geom_bar(stat = "identity", colour = "black",position = "dodge", width = 0.75) +
    geom_hline(yintercept=-log10(0.1),linetype = "dotted") +
    theme_bw() +
    coord_flip() +
    labs(x = "", y = "-log10(pval)") +
    theme(axis.line = element_line(colour = "black"),
        axis.title=element_text(size=12,face="bold"),
        plot.title=element_text(size=14,face="bold"),
        panel.grid.minor = element_blank(),
        legend.position = "none",
        panel.background = element_blank()) +
        scale_fill_brewer(palette="Set1") +
    facet_grid(cluster~.,space="free",scales="free") +
    ggtitle("Chibon RaMP Analysis")

#pdf("~/Desktop/chibon_pathways.pdf",width=8,height=10)
p2
#dev.off()

```

The Chibon dataset had 478 transcripts significantly correlated with MDM2.

Survival analysis yielded no correlation between MDM2 expression and
metastasis-free survival.

```{r}
chibon_clinical_data<-read.csv("~/Desktop/Liposarcoma project/Gene Microarray Analysis/chibon_clinical_data.csv")
chibon_clinical_data$X.Sample_characteristics_ch1 <- gsub("time: ","",chibon_clinical_data$X.Sample_characteristics_ch1)
chibon_clinical_data$X.Sample_characteristics_ch1 <- as.numeric(chibon_clinical_data$X.Sample_characteristics_ch1)
## Confirming sample orders are the same
## chibon_clinical_data$X.Sample_geo_accession == colnames(chibon_data_exprs)

chibon_clinical_data$MDM2_expression <- chibon_data_exprs[MDM2_Probe,]

metastasis<-sapply(as.vector(chibon_clinical_data$Metastasis),function(x) ifelse(x=="no",return(0),return(1)))
chibon_clinical_data$Metastasis<-metastasis

sf <- survfit( Surv(X.Sample_characteristics_ch1,Metastasis) ~ 1, data = chibon_clinical_data)
ggsurvplot(sf,ggtheme = theme_minimal())

fitcox <- coxph(Surv(X.Sample_characteristics_ch1,Metastasis) ~ MDM2_expression, data = chibon_clinical_data)
summary(fitcox)

## Discrete model (MDM2 median expression)
median_MDM2<-median(chibon_clinical_data$MDM2_expression)

MDM2_status<-sapply(as.vector(chibon_clinical_data$MDM2_expression),function(x)
    ifelse(x > median_MDM2,
           return("High"),
           return("Low")))
chibon_clinical_data$MDM2_status<-MDM2_status


fitcox <- coxph(Surv(X.Sample_characteristics_ch1,Metastasis) ~ MDM2_status, data = chibon_clinical_data)
summary(fitcox)

```

Sphingolipid metabolic process genes (GO:0006665), 156 genes

	* 74 made it into the filtered panel
	* 6 were significantly correlated with MDM2

| Gene Symbol | Process                                                                                                          | Other facts                                                                                                                      | Linked to sarcoma/cancer                             |
|:------------|:-----------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------:|
| HEXA        | glycosphingolipid metabolic process                                                                              | Catalyzes breakdown of GM2 ganglioside in neurons                                                                                | Lower activity in prostate cancer cells              |
| TNFRSF1A    | positive regulation of ceramide biosynthetic process                                                             | Regulates ceramide production which directs apoptosis                                                                            | Accumulation associated with tumor survival          |
| ALDH3B1     | sphingolipid biosynthetic process                                                                                | May have a protective role against the cytotoxicity induced by lipid peroxidation                                                | No                                                   |
| NEU1        | glycosphingolipid metabolic process/ganglioside catabolic process                                                | Cleaves terminal sialic acid residues from substrates such as glycolipids                                                        |                                                      |
| UGCG        | glycosphingolipid metabolic process/glycosphingolipid biosynthetic process/glucosylceramide biosynthetic process | Catalyzes the first glycosylation step in the biosynthesis of glycosphingolipids (makes glucosylceramide)                        |                                                      |
| PRKD3       | sphingolipid biosynthetic process                                                                                | Converts transient diacylglycerol (DAG) signals into prolonged physiological effects, involved in resistance to oxidative stress | Regulates growth of breast and prostate cancer cells |


```{r}

gene_list<-read.csv("~/Desktop/Liposarcoma project/Gene Microarray Analysis/UGCG_related_genes.csv")
##length(unique(intersect(gn,gene_list$Gene)))
sphingolipid_genes<-unique(intersect(MDM2_correlations_chibon_sig$gn..MDM2_Probe.,gene_list$Gene))

```

Plotting the 6 sphingolipid metabolic process genes

Also checking on ALDH3A1 and ALDH2

```{r,fig.height=10}

corr_plotter<-function(gene){
    ind<-match(gene,gn)
    MDM2_corr_ind<-match(gene, MDM2_correlations_chibon$gn..MDM2_Probe.)
    plot.df<-data.frame(MDM2=chibon_data_exprs[MDM2_Probe,],gene=chibon_data_exprs[ind,])
    corr_coef <- round(cor(plot.df$MDM2, plot.df$gene, method="spearman"), digits=5)
    corr_test <- round(MDM2_correlations_chibon$MDM2_corr_test_chibon_adj[MDM2_corr_ind], digits=5)
    
    p<-ggplot(plot.df,aes(x=MDM2,y=gene)) +
        geom_point(color="blue") +
        theme_classic() +
        geom_smooth(method=lm,color="black") +
        ylab(gene) +
        ggtitle(paste0("r = ", corr_coef,"\n p = ", corr_test))
    return(p)
}
save(gn, MDM2_correlations_chibon, chibon_data_exprs, MDM2_Probe, sphingolipid_genes, file = "~/Desktop/Liposarcoma project/final_figures/final_figures_org_file/fig5A.Rda")
plotlist<-lapply(sphingolipid_genes,corr_plotter)
multiplot(plotlist=plotlist,cols=2)
```


```{r}
plotlist<-lapply(c("ALDH2"),corr_plotter)
multiplot(plotlist=plotlist,cols=1)

```

# MDM2 Expression

```{r}
load("~/Desktop/Liposarcoma project/Gene Microarray Analysis/denton_RaMP_analysis.Rda")

TCGA<-data.frame(group="TCGA",value=TCGA_Z_Score_MDM2)
cells<-data.frame(group="cells",value=cell_lines_Z_score_MDM2)
chibon<-data.frame(group="chibon",value=chibon_z_score_MDM2)
denton<-data.frame(group="denton",value=denton_z_score_MDM2)

plot.df<-rbind(TCGA,cells,chibon,denton)

ggplot(plot.df, aes(x=group, y=value, fill=group)) + geom_boxplot()

```


# UGCG correlations

```{r}

p1<-ggplot(UGCG_TCGA,aes(x=MDM2,y=UGCG)) +
    geom_point(color="blue") +
    theme_classic() +
    geom_smooth(method=lm,color="black") +
    ggtitle("TCGA") +
    xlim(3,16) +
    ylim(3,16)

p2<-ggplot(UGCG_cells,aes(x=MDM2,y=UGCG)) +
    geom_point(color="red") +
    theme_classic() +
    geom_smooth(method=lm,color="black") +
    ggtitle("Cells") +
    xlim(3,16) +
    ylim(3,16)

p3<-ggplot(UGCG_denton,aes(x=MDM2,y=UGCG)) +
    geom_point(color="forestgreen") +
    theme_classic() +
    geom_smooth(method=lm,color="black") +
    ggtitle("Denton") +
    xlim(3,16) +
    ylim(3,16)

p4<-ggplot(UGCG_chibon,aes(x=MDM2,y=UGCG)) +
    geom_point(color="goldenrod") +
    theme_classic() +
    geom_smooth(method=lm,color="black") +
    ggtitle("Chibon") +
    xlim(3,16) +
    ylim(3,16)


multiplot(p1,p2,p3,p4,cols=2)

```

# Clinical Characteristics

TCGA

* 66% male
* Median age 65

Chibon

* Time to metastasis data available on GEO
* Primary untreated tumor tissue
* Tumors were taken from "internal trunk"
* Overall cohort:
  + Median age is 63
  + 51.6% male
* MDM2 expression was .76 SDs above mean pre-filtration

Denton

* Survival data is available on GEO
* "The study cohort was patients treated for primary liposarcoma at
  Memorial Sloan-Kettering"
* "Data for each patient on ... treatment... were collected in a
  prospectively maintained database"
  + Link for database was provided but deprecated
* Only mentions 39 samples while I found 40 online?
* Overall cohort:
  + Median age is 58
  + 57.9% male
  + MDM2 expression was .81 SDs above mean pre-filtration

# Methods table
All samples used were DDLPS. All data were log-transformed

| Dataset | samples | probes/transcripts | genes | Post-filtration | Normalization | Median cutoff | CV cutoff | sig. genes | Treatment Status |
|---------|---------|--------------------|-------|-----------------|---------------|---------------|-----------|------------|------------------|
| Chibon  | 62      | 54613              | 12993 | 7237            | GC-RMA        | 40%           | 25%       | 478        | Pre              |
| TCGA    | 56      | --                 | 20531 | 9194            | RSEM          | 40%           | 25%       | 16         | ???              |
| Denton  | 40      | 22283              | 12993 | 7041            | RMA           | 40%           | 25%       | 7          | Post             |
| Chen    | 6       | 158576             | 33363 | 9676            | ???           | 70%           | 1%        | 0          | Pre              |

Chibon and Denton both used the Affymetrix Human Genome U133 Plus 2.0 Array

# Obsolete Denton code
## Denton

Data were normalized by the RMA method. This includes a log
transformation, so we can't log-transform this set.

```{r,eval=FALSE}

setwd("~/Desktop/Liposarcoma project/Gene Microarray Analysis/TCGA_Sarcoma_RNAseq/")

f <- "GSE30929.Rda"
if (file.exists(f)) {
  load(f)
} else {
    gset <- getGEO("GSE30929", GSEMatrix =TRUE, getGPL=FALSE)
    if (length(gset) > 1) idx <- grep("GPL96", attr(gset, "names")) else idx <- 1
    gset <- gset[[idx]]
    gsms <- paste0("0000000000000000000000000000000000000000XXXXXXXXXX",
        "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
        "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
    sml <- c()
    for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
    sml <- paste("G", sml, sep="")

    ## eliminate samples marked as "X"
    sel <- which(sml != "GX")
    sml <- sml[sel]
    gse <- gset[ ,sel]
    save(gse, file=f)
}
rm(f)
if (file.exists("locns.Rda")) {
  load("locns.Rda")
  } else {
  locns <- getGEOSuppFiles("GSE30929")
  save(locns, file="locns.Rda")
  }

#untar(tarfile = "~/Desktop/Liposarcoma project/Gene Microarray Analysis/GSE30929/GSE30929_RAW.tar")

setwd("~/Desktop/Liposarcoma project/Gene Microarray Analysis/")
celFiles<- unlist(list.files(pattern=".CEL.gz",full.names=TRUE))

DDcelFiles<-celFiles[1:40]

denton_data<-ReadAffy(filenames = DDcelFiles)
denton_eset<-gse
denton_data_exprs<-exprs(denton_eset)

probes<-affy::geneNames(denton_data)
## Create a table that translates affyProbes to gene symbols
OUT <- AnnotationDbi::select(hgu133a.db, probes, c("SYMBOL", "ENTREZID", "GENENAME","ENSEMBL"))

###########################
# Filter and transform
###########################
gn<-OUT$SYMBOL[match(rownames(denton_data_exprs),OUT$PROBEID)]
ensembl<-OUT$ENSEMBL[match(rownames(denton_data_exprs),OUT$PROBEID)]
denton_data_exprs <- denton_data_exprs[-is.na(ensembl),]
gn <- gn[-is.na(ensembl)]
ensembl <- ensembl[-is.na(ensembl)]

indices <- c()
for(x in unique(ensembl)){
    probes<-which(ensembl==x)
    if(length(probes)==1){
        indices <- c(indices,probes)
    }else{
        probe_medians<-apply(denton_data_exprs[probes,],1,median)
        output<-probes[which.max(probe_medians)]
        indices <- c(indices,output)
    }
}

denton_data_exprs<-denton_data_exprs[indices,]
gn<-gn[indices]

filtered_data<-filterAndPlot(denton_data_exprs,med_cutoff=0.4,SD_cutoff=0.25)
############################

denton_data_exprs<-filtered_data[[1]]
gn<-filtered_data[[2]]
plotlist<-filtered_data[[3]]

```


```{r, eval=F}

MDM2_Probe <- which(gn=="MDM2")
UGCG_ind<-which(gn=="UGCG")
UGCG_denton<-data.frame(MDM2=denton_data_exprs[MDM2_Probe,],UGCG=denton_data_exprs[UGCG_ind,])

denton_z_scores<-scale(denton_data_exprs)
denton_z_score_MDM2<-denton_z_scores[MDM2_Probe,]


MDM2_correlations_denton<-apply(denton_data_exprs[-MDM2_Probe,],1,function(x) return(cor(x,denton_data_exprs[MDM2_Probe,],method="spearman")))
MDM2_corr_test_denton<-apply(denton_data_exprs[-MDM2_Probe,],1,function(x) return(cor.test(x,denton_data_exprs[MDM2_Probe,],method="spearman")$p.value))
pval_plot_denton<-qplot(MDM2_corr_test_denton,bins=500)+theme_classic()+xlab("Unadjusted Spearman P value")+ggtitle("Denton P vals")

MDM2_corr_test_denton_adj<-p.adjust(MDM2_corr_test_denton,method="fdr")


MDM2_correlations_denton<-data.frame(MDM2_corr_test_denton,MDM2_corr_test_denton_adj,gn[-MDM2_Probe])
MDM2_correlations_denton<-MDM2_correlations_denton[order(MDM2_correlations_denton[,2]),]

MDM2_correlations_denton_sig<-MDM2_correlations_denton[MDM2_correlations_denton[,2]<0.05,]

entrez_ids<-OUT$ENTREZID[match(rownames(MDM2_correlations_denton_sig),OUT$PROBEID)]

denton_pathways<-getPathwayFromAnalyte(analytes=as.vector(unique(MDM2_correlations_denton_sig$gn)),conpass = "",NameOrIds = "names")
denton_fishers<-runCombinedFisherTest(pathwaydf = denton_pathways,conpass = "")
save(denton_fishers, MDM2_corr_test_denton, MDM2_correlations_denton, MDM2_correlations_denton_sig, denton_data_exprs, plotlist, UGCG_denton, pval_plot_denton, denton_z_score_MDM2, file="~/Desktop/Liposarcoma project/Gene Microarray Analysis/denton_RaMP_analysis.Rda")

```

```{r}
load("~/Desktop/Liposarcoma project/Gene Microarray Analysis/denton_RaMP_analysis.Rda")

pval_plot_denton

pcaPlot(denton_data_exprs)+ggtitle("Denton PCA")

```

```{r}

multiplot(plotlist=plotlist,cols=2)

kable(MDM2_correlations_denton_sig)

## No pathways found

```

# Meta-analysis

```{r}
## Gene Panels
library(UpSetR)

TCGA <- unique(gene_correlations$name)
Chibon <- unique(MDM2_correlations_chibon$gn)
Denton <- unique(MDM2_correlations_denton$gn)

inputList <- list(TCGA=as.vector(TCGA), Chibon=as.vector(Chibon), Denton=as.vector(Denton))

upset(fromList(inputList))
grid.text("Filtered gene list overlaps",x = 0.65, y=0.95, gp=gpar(fontsize=20))

## Significant Results
chib_tcga<-intersect(significantly_correlated_genes$name,unique(MDM2_correlations_chibon_sig$gn))
dent_tcga<-intersect(significantly_correlated_genes$name,unique(MDM2_correlations_denton_sig$gn))
chib_dent<-intersect(unique(MDM2_correlations_denton_sig$gn),unique(MDM2_correlations_chibon_sig$gn))
all<-intersect(chib_tcga,dent_tcga)

overlap<-data.frame(Transcript=c(all,chib_tcga,chib_dent,dent_tcga),
                    Datasets=c(3,
                               rep(2,length(chib_tcga)),
                               rep(2,length(chib_dent)),
                               rep(2,length(dent_tcga))))
overlap<-overlap[!duplicated(overlap$Transcript),]
kable(overlap)


TCGA <- significantly_correlated_genes$name
Chibon <- unique(MDM2_correlations_chibon_sig$gn)
Denton <- unique(MDM2_correlations_denton_sig$gn)

inputList <- list(TCGA=as.vector(TCGA), Chibon=as.vector(Chibon), Denton=as.vector(Denton))

upset(fromList(inputList))

```
