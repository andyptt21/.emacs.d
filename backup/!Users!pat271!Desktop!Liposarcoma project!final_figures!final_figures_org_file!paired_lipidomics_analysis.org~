#+TITLE: Paired analysis of lipidomic data
#+AUTHOR: Andrew Patt
#+DESCRIPTION: These are just the figures which will be in the final paper, with minor edits to ensure consistency of font size, etc.

In order to perform paired analysis, we need to match paired samples together.
* Building a key of sample pairs
#+BEGIN_SRC R :session "global" :results output :exports both
library(tidyverse)
setwd("~/Desktop/Liposarcoma project/final_figures/final_figures_org_file")
sample_IDs<-read.csv("~/Desktop/Liposarcoma project/Lipidyzer/Sample_IDs.csv")
sample_info<-read.csv("~/Desktop/Liposarcoma project/Lipidyzer/Cell_Run_Order.csv")

mdm2lo_groups=c("863","815")
mdm2hi_groups=c("224","224A","224B","246","141")

POS_Numbers<-c()
for(i in 1:82){
    POS_Numbers<-
        c(POS_Numbers,
          strsplit(
              strsplit(
                  as.character(
                      sample_IDs$POSITIVE[i]),"_")[[1]][2],"-")[[1]][1])
}

POS_Cell_Lines<-c()
for(i in 1:82){
    POS_Cell_Lines<-c(POS_Cell_Lines,
                      strsplit(as.character(sample_IDs$POSITIVE[i]),"-")[[1]][2])
}

POS_MDM2_Status<-c()
for(i in POS_Cell_Lines){
  index<-match(i,sample_info$Number)
  POS_MDM2_Status<-c(POS_MDM2_Status,as.character(sample_info$CellLine[index]))
}

## POS_MDM2_Status<-sapply(POS_MDM2_Status,
##                         function(x) if(x %in% mdm2lo_groups)
##                                     {return("Low")}
##                                     else if (x %in% mdm2hi_groups)
##                                     {return("High")} else return(NA))

POS_Treatment_Status<-c()
for(i in POS_Cell_Lines){
  index<-match(i,sample_info$Number)
  POS_Treatment_Status<-c(POS_Treatment_Status,
                          as.character(sample_info$Treatment[index]))
}

POS_medium<-c()
for(i in POS_Cell_Lines){
  index<-match(i,sample_info$Number)
  POS_medium<-c(POS_medium,as.character(sample_info$Media[index]))
}

POS_sample_info<-data.frame(Run_Order=POS_Numbers,
                            Number=POS_Cell_Lines,
                            Cell_line=POS_MDM2_Status,
                            Treatment_Status=POS_Treatment_Status,
                            Medium=POS_medium)

POS_sample_info<-POS_sample_info[-52,]
POS_sample_info<-POS_sample_info[-40,]

paired_key <- POS_sample_info
paired_key <- paired_key %>% filter(!is.na(Cell_line))

#+END_SRC

* Treated vs. Untreated
#+header: :width 500 :height 500 :R-dev-args
#+BEGIN_SRC R :session "global" :file TreatedVsUntreatedLMME.png :results output graphics :export both
load("~/Desktop/Liposarcoma project/final_figures/final_figures_org_file/figure3.Rda")

## Filter to treated vs untreated
library(lme4)
library(pbapply)
library(sjstats)

Treated_untreated_indices <-
    paired_key %>%
    filter(Medium=="DMEM") %>%
    select(Run_Order)

LM_area_DMEM <- LM_area %>%
    select(as.vector(t(Treated_untreated_indices)))

cell <-
    paired_key %>%
    filter(Medium=="DMEM") %>%
    select(Cell_line)

treatment <-
    paired_key %>%
    filter(Medium=="DMEM") %>%
    select(Treatment_Status)


## return eta_sq(fit)
TreVsUntreLMME<-t(pbapply(LM_area_DMEM, 1, function(x){
    df<-data.frame(y=x,cell=unlist(cell),treatment=unlist(treatment))
    colnames(df)[1]="y"
    treated<-df %>%
        filter(treatment=="Atorvastatin") %>%
        select(y)
    untreated<-df %>%
        filter(treatment=="none") %>%
        select(y)
    log2fc<-mean(as.matrix(treated))-mean(as.matrix(untreated))
    fit.null<-lmer(y ~ (1|cell), data = df,REML=FALSE)
    fit<-lmer(y ~ treatment + (1|cell), data = df,REML=FALSE)
    anovaFit<-anova(fit.null,fit)
    return(c(anovaFit$'Pr(>Chisq)'[2],as.numeric(eta_sq(fit))[2],log2fc))
}))

TreVsUntreLMME<-as.data.frame(TreVsUntreLMME)
colnames(TreVsUntreLMME)<-c("myp","eta_sq","log2fc")
TreVsUntreLMMEAdj<-TreVsUntreLMME$mypadj<-p.adjust(TreVsUntreLMME$myp,method="fdr")
TreVsUntreLMME$name<-rownames(TreVsUntreLMME)

write.csv(TreVsUntreLMMEAdj,file="~/Desktop/LMME_treatment_results.csv")
hist(TreVsUntreLMMEAdj,breaks=100)

#+END_SRC

#+RESULTS:
[[file:TreatedVsUntreatedLMME.png]]

* DMEM vs STDP
#+header: :width 500 :height 500 :R-dev-args
#+BEGIN_SRC R :session "global" :file DMEMVsSTDPLMME.png :results output graphics :export both

DMEM_STDP_indices <-
    paired_key %>%
    filter(Treatment_Status=="none") %>%
    select(Run_Order)

LM_area_untreated <- LM_area %>%
    select(as.vector(t(DMEM_STDP_indices)))

cell <-
    paired_key %>%
    filter(Treatment_Status=="none") %>%
    select(Cell_line)

medium <-
    paired_key %>%
    filter(Treatment_Status=="none") %>%
    select(Medium)

## return eta_sq(fit)
DMEMVsSTDPLMME<-t(pbapply(LM_area_untreated, 1, function(x){
    df<-data.frame(y=x,cell=unlist(cell),medium=unlist(medium))
    colnames(df)[1]="y"
        treated<-df %>%
        filter(medium=="STDP") %>%
        select(y)
    untreated<-df %>%
        filter(medium=="DMEM") %>%
        select(y)
    log2fc<-mean(as.matrix(treated))-mean(as.matrix(untreated))
    fit.null<-lmer(y ~ (1|cell), data = df,REML=FALSE)
    fit<-lmer(y ~ medium + (1|cell), data = df,REML=FALSE)
    anovaFit<-anova(fit.null,fit)
    return(c(anovaFit$'Pr(>Chisq)'[2],as.numeric(eta_sq(fit))[2],log2fc))
}))

DMEMVsSTDPLMME<-as.data.frame(DMEMVsSTDPLMME)
colnames(DMEMVsSTDPLMME)<-c("myp","eta_sq","log2fc")
DMEMVsSTDPLMMEAdj<-DMEMVsSTDPLMME$mypadj<-p.adjust(DMEMVsSTDPLMME$myp,method="fdr")
DMEMVsSTDPLMME$name<-rownames(DMEMVsSTDPLMME)
hist(DMEMVsSTDPLMMEAdj,breaks=100)

#+END_SRC

#+RESULTS:
[[file:DMEMVsSTDPLMME.png]]

* STDP treated vs DMEM untreated
#+BEGIN_SRC R :session "global" :results output :exports both
Treated_STDP_indices <-
    paired_key %>%
    filter(Medium=="DMEM" & Treatment_Status=="none" |
           Medium=="STDP" & Treatment_Status=="Atorvastatin") %>%
    select(Run_Order)


LM_area_double <- LM_area %>%
    select(as.vector(t(Treated_STDP_indices)))

cell <-
    paired_key %>%
    filter(Medium=="DMEM" & Treatment_Status=="none" |
           Medium=="STDP" & Treatment_Status=="Atorvastatin") %>%
    select(Cell_line)

treatment <-
    paired_key %>%
    filter(Medium=="DMEM" & Treatment_Status=="none" |
           Medium=="STDP" & Treatment_Status=="Atorvastatin") %>%
    select(Treatment_Status)

STDPTreVsDMEMUntreLMME<-t(pbapply(LM_area_double, 1, function(x){
    df<-data.frame(y=x,cell=unlist(cell),treatment=unlist(treatment))
    colnames(df)[1]="y"
    treated<-df %>%
        filter(treatment=="Atorvastatin") %>%
        select(y)
    untreated<-df %>%
        filter(treatment=="none") %>%
        select(y)
    log2fc<-mean(as.matrix(treated))-mean(as.matrix(untreated))
    fit.null<-lmer(y ~ (1|cell), data = df,REML=FALSE)
    fit<-lmer(y ~ treatment + (1|cell), data = df,REML=FALSE)
    anovaFit<-anova(fit.null,fit)
    return(c(anovaFit$'Pr(>Chisq)'[2],as.numeric(eta_sq(fit))[2],log2fc))
}))

#+END_SRC
* Upsetr
#+NAME: Treatment_Medium_Upsetr
#+header: :width 500 :height 500 :R-dev-args
#+BEGIN_SRC R :session "global" :file Treatment_Medium_Upsetr.png :results output graphics :export both
library(UpSetR)
library(readxl)
lipidomic_key<-read_xlsx("~/Desktop/Liposarcoma project/Lipidomics_key.xlsx",sheet=1)
library(RColorBrewer)

lipidomic_key <- lipidomic_key[match(rownames(LM_area),lipidomic_key$name),]

TreVsUntreLMMESig_ind <- which(TreVsUntreLMMEAdj < 0.05)
TreVsUntreLMMESig <- data.frame(p.val.adj=TreVsUntreLMMEAdj[as.numeric(TreVsUntreLMMESig_ind)],
                                class=as.vector(lipidomic_key$`LM Main Class`)[as.numeric(TreVsUntreLMMESig_ind)])

DMEMVsSTDPLMMESig_ind <- which(DMEMVsSTDPLMMEAdj < 0.05)
DMEMVsSTDPLMMESig <- data.frame(p.val.adj=DMEMVsSTDPLMMEAdj[as.numeric(DMEMVsSTDPLMMESig_ind)],
                                class=as.vector(lipidomic_key$`LM Main Class`)[as.numeric(DMEMVsSTDPLMMESig_ind)])

listInput <- list(Treated_vs_untreated = rownames(TreVsUntreLMMESig),
                  DMEM_vs_STDP = rownames(DMEMVsSTDPLMMESig))

upset(fromList(listInput),order.by="freq")

#+END_SRC

#+RESULTS: Treatment_Medium_Upsetr
[[file:Treatment_Medium_Upsetr.png]]

91 lipids altered by treatment status, 223 altered by medium, 57 in
common between the two.
* Volcano plots
** Function
#+BEGIN_SRC R :session "global" :results output :exports both
  volcano_plotter <- function(df,title){
      T_test_results<-df
      
      ## Make insignificant points smaller and more transparent
      T_test_results$significant = #abs(T_test_results$log2fc) > 1 &
          -log10(T_test_results$mypadj) > -log10(0.05)
      T_test_results$size <- ifelse(T_test_results$significant,4,2)
      
      ## Color code by lipid class
      T_test_results$MainClass<-lipidomic_key$`LM Main Class`[match(T_test_results$name,lipidomic_key$name)]
      palette_names<-sort(unique(T_test_results$MainClass))
      T_test_results$MainClass<-sapply(1:nrow(T_test_results),function(x){
          ifelse(T_test_results$significant[x],
                 return(T_test_results$MainClass[x]),return("Not Significant"))
      })
      
      legend_labels<-sort(unique(sapply(T_test_results$MainClass, function(x){
          if(!is.na(x)){
              return(paste0(x," (n=",length(which(T_test_results$MainClass==x)),")"))
          }else{
              return(x)
          }
      })))
      
      ##legend_labels<-legend_labels[-which(is.na(legend_labels))]
      
      palette<-c(brewer.pal(12,"Paired"),"#40E0D0","violet","grey80")
      names(palette)<-c(palette_names,"Not Significant")
      palette<-palette[unique(T_test_results$MainClass)]
                                        #palette<-palette[-which(is.na(palette))]
      
      if(any(T_test_results$significant)){
          g = ggplot(data=T_test_results, aes(x=log2fc, y=-log10(mypadj), colour=MainClass)) +
              geom_point(alpha=0.7,aes(size=size, text=name)) +
              scale_color_manual(values = palette,
                                        #na.value="grey80",
                                 labels=legend_labels,
                                 name="LipidMaps Main Class") +
              theme_bw() +
                                        #scale_color_brewer(palette="Paired",na.value="grey80") +
              ggtitle(title) +
              theme(plot.title = element_text(hjust = 0.5)) +
              theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
              ylab("-log10 p-value") +
              geom_hline(yintercept = -log10(0.05),lty = 2) +
              geom_vline(xintercept = 1, lty = 2) +
              geom_vline(xintercept = -1, lty = 2) +
              scale_size(range=c(2,4)) +
              guides(size=FALSE)
      }else{
          g = ggplot(data=T_test_results, aes(x=log2fc, y=-log10(mypadj))) +
              geom_point(alpha=0.4,aes(text=name)) +
              scale_color_manual(values = palette) +#,na.value="grey80") +
              theme_bw() +
                                        #scale_color_brewer(palette="Paired",na.value="grey80") +
              ggtitle(title) +
              theme(plot.title = element_text(hjust = 0.5)) +
              theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
              ylab("-log10 p-value") +
              geom_hline(yintercept = -log10(0.05),lty = 2) +
              geom_vline(xintercept = 1, lty = 2) +
              geom_vline(xintercept = -1, lty = 2)
          return(g)
      }
      
      T_test_results_sig<-T_test_results[T_test_results$significant,]
      text_size<-round(min(20,350/nrow(T_test_results_sig)),digits=0)
      
      barplot<-ggplot(T_test_results_sig, aes(x=reorder(name,log2fc), y=log2fc ))+
          theme_bw() +
          geom_bar(stat="identity",colour="black",aes(fill = MainClass)) +
          scale_fill_manual(values = palette) +
          coord_flip() +
          ylab("eta squared") +
          theme(axis.title.y = element_blank(),axis.title.x = element_text(size=12,face="bold"),axis.text.y=element_text(size=text_size),axis.text.x=element_text(size=10)) +
          theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
      
      return(list(g,barplot))
  }
#+END_SRC
** Plots
#+NAME: Volcano_plots
#+header: :width 1000 :height 1000 :R-dev-args
#+BEGIN_SRC R :session "global" :file Volcano_plots.png :results output graphics :export both
  library(cowplot)

  volcano_plotter(TreVsUntreLMME,"Treated vs Untreated LMME")[[1]]
  volcano_plotter(DMEMVsSTDPLMME,"STDP vs DMEM LMME")[[1]]
#+END_SRC

#+RESULTS: Volcano_plots
[[file:Volcano_plots.png]]

* Class differences by treatment status
#+NAME: treatmentLMMEcomposition
#+header: :width 500 :height 500 :R-dev-args
#+BEGIN_SRC R :session "global" :file treatmentLMMEcomposition.png :results output graphics :export both
library(reshape)
altered <- data.frame(altered=
                          table(TreVsUntreLMMESig$class)/nrow(TreVsUntreLMMESig))

background <- data.frame(background=
                             table(lipidomic_key$`LM Main Class`)/nrow(lipidomic_key))
colnames(altered)<-c("class","Significant")
colnames(background)<-c("class","Background")
plot.df<-left_join(background,altered)
plot.df <- plot.df %>%
    gather(backgroundfreq,alteredfreq,-class)
colnames(plot.df)<-c("class","test","freq")

ggplot(plot.df,aes(x=class,y=freq,alpha=test)) +
    geom_bar(stat="identity",position="dodge") +
    theme_classic() +
    theme(axis.text.x = element_text(angle=45,hjust=1)) +
    ggtitle("Lipidomic differences based on atorvastatin treatment (LMME)")

#+END_SRC

#+RESULTS: treatmentLMMEcomposition
[[file:treatmentLMMEcomposition.png]]

* Class differences by medium
#+NAME: mediaLMMEcomposition
#+header: :width 500 :height 500 :R-dev-args
#+BEGIN_SRC R :session "global" :file mediaLMMEcomposition.png :results output graphics :export both

altered <- data.frame(altered=
                          table(DMEMVsSTDPLMMESig$class)/nrow(DMEMVsSTDPLMMESig))

colnames(altered)<-c("class","Significant")

plot.df<-left_join(background,altered)
plot.df <- plot.df %>%
    gather(backgroundfreq,alteredfreq,-class)
colnames(plot.df)<-c("class","test","freq")

ggplot(plot.df,aes(x=class,y=freq,alpha=test)) +
    geom_bar(stat="identity",position="dodge") +
    theme_classic() +
    theme(axis.text.x = element_text(angle=45,hjust=1)) +
    ggtitle("Lipidomic differences based on cell media (LMME)")

#+END_SRC

#+RESULTS: mediaLMMEcomposition
[[file:mediaLMMEcomposition.png]]

